@model List<POCO.AccountTable>

@{
    ViewBag.Title = "Index";
}

<h2>AccountTable</h2>




@helper GetTreeView(List<POCO.AccountTable> accountingTree, Int64 parentID)
{
    foreach (var i in accountingTree.Where(a => a.ParentId.Equals(parentID)))
    {
        <li>
            @{var TreeBranche = accountingTree.Where(a => a.ParentId.Equals(i.AccountNo)).Count();}
            @if (TreeBranche > 0)
            {
                <span class="collapseTree  collapsible">&nbsp;</span>
            }
            else
            {
                <span style="width:15px; display:inline-block">&nbsp;</span>
            }
            <span>
                @i.AccountNo&nbsp;@i.AccountName

                <span>
                    @*<button type="button" onclick="location.href='@Url.Action("Create", "AccountTable")'" />*@
                    <a href="~/Controllers/AccountTable/create" onclick="location.href='@Url.Action("Create", "AccountTable",new { parAccountNo = i.AccountNo })'"> Create</a>|
                    <a href="~/Controllers/AccountTable/Edit" onclick="location.href='@Url.Action("Edit", "AccountTable",new { parAccountNo = i.AccountNo })'"> Edit</a> |


                    <a href="~/Controllers/AccountTable/Details" onclick="location.href='@Url.Action("Details", "AccountTable",new { parAccountNo = i.AccountNo })'"> Details</a>|

                    <a href="~/Controllers/AccountTable/Delete" onclick="location.href='@Url.Action("Delete", "AccountTable",new { parAccountNo = i.AccountNo })'"> Delete</a>
                
                </span>




            </span>
            @if (TreeBranche > 0)
            {
                <ul>
                    @GetTreeView(accountingTree, i.AccountNo)
                    @* Recursive  Call for Populate Sub items here*@
                </ul>
            }
        </li>
    }
}
<div class="col-lg-6">
    <div class="ibox ">
        <div class="ibox-title">
            <h4>Account Tree</h4>

        </div>
        <div class="ibox-content">

            <div id="jstree1">
                @if (Model.Count() <= 0)
                {
                    @Html.ActionLink("Create", "CreateParent")
                }
                @if (Model != null && Model.Count() > 0)
                {
                    <ul>
                        @GetTreeView(Model, Model.FirstOrDefault().ParentId)
                    </ul>
                }


            </div>
        </div>
    </div>
</div>

<button>Remove the "intro" class from all p elements</button>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $("button").click(function () {
            $("span").removeClass();
        });
    });
</script>





